/*
    Generated by cib for ABI compatibility and stability.
*/

#pragma once

#include "__zz_cib_StdFunctionTests-decl.h"

#include <cstdint>
#include <type_traits>

namespace __zz_cib_ {

extern "C" struct __zz_cib_AbiException
{
  using __zz_cib_AbiExceptionDestructor = void(__zz_cib_decl*)(struct __zz_cib_AbiException*);

  std::uintptr_t                  version;
  std::uintptr_t                  classId;
  void*                           handle;
  __zz_cib_AbiExceptionDestructor Destroy;
};

///{ Asserts to ensure AbiFunctor is compatible for all compilers
static_assert(std::is_standard_layout_v<__zz_cib_AbiException>);
static_assert(sizeof(__zz_cib_AbiException) == 4 * sizeof(std::uintptr_t));
///}

inline __zz_cib_AbiException* __zz_cib_AbiExceptionNew(std::uintptr_t classId, void* handle)
{
  constexpr std::uintptr_t kAbiExceptionVersion = 1;

  return new __zz_cib_AbiException{kAbiExceptionVersion, classId, handle, [](__zz_cib_AbiException* ex) { delete ex; }};
}

inline void __zz_cib_AbiExceptionDelete(__zz_cib_AbiException* __zz_cib_exception)
{
  __zz_cib_exception->Destroy(__zz_cib_exception);
}

} // namespace __zz_cib_
